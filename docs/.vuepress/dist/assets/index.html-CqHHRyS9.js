import{_ as i,c as a,b as e,o as n}from"./app-CYQbWjt5.js";const l={};function t(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="一、vue2基础" tabindex="-1"><a class="header-anchor" href="#一、vue2基础"><span>一、Vue2基础</span></a></h1><h2 id="_1-1-常用指令" tabindex="-1"><a class="header-anchor" href="#_1-1-常用指令"><span>1.1 常用指令</span></a></h2><ol><li><p>v-html</p></li><li><p>v-show</p></li><li><p>v-if</p></li><li><p>v-else</p></li><li><p>v-else-if</p></li><li><p>v-on</p><ul><li><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">v-on:click=&quot;表达式或者方法&quot;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/*简写*/</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">@click=&quot;表达式或者方法&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>​</p></li></ul></li><li><p>v-bind</p><ul><li><p>动态设置html的标签属性 --&gt;<code>src, url, title</code></p></li><li><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">img</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> v-bind</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">src</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">imgUrl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> v-bind</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> alt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/*简写*/</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;img :src=&quot;imgUrl&quot; :title=&quot;msg&quot; alt=&quot;&quot;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>v-for</p></li><li><p>v-model</p></li></ol><h2 id="_1-2-指令修饰符" tabindex="-1"><a class="header-anchor" href="#_1-2-指令修饰符"><span>1.2 指令修饰符</span></a></h2><p>通过 <code>.</code>指明一些指令后缀，不同后缀封装了不同的处理操作 --&gt;简化代码</p><ol><li><p>按键修饰符</p><p>@keyup.enter --&gt; 键盘回车监听</p></li><li><p>v-model修饰符</p><p>v-model.trim --&gt; 去除首尾空格</p><p>v-model.number --&gt; 转数字</p></li><li><p>事件修饰符</p><p>@时间名.stop --&gt; 阻止冒泡</p><p>@事件名.prevent --&gt; 阻止默认行为</p></li></ol><h2 id="_1-3-v-bind-对于样式控制的增强-操作class" tabindex="-1"><a class="header-anchor" href="#_1-3-v-bind-对于样式控制的增强-操作class"><span>1.3 v-bind 对于样式控制的增强 - 操作class</span></a></h2><p>语法：<code>class=&quot;对象/数组&quot;</code></p><ol><li><p>对象 --&gt; 键就是类名，值就是布尔值。如果值为<code>true</code>，有这个类，否则没有</p><p><code>&lt;div class=&quot;box&quot; :class=&quot;{类名1：布尔值，类名2：布尔值}&quot;&gt;&lt;/div&gt;</code></p></li><li><p>数组 --&gt; 数组中所有的类，都会添加到盒子中，本质就是一个<code>class列表</code></p><p><code>&lt;div class=&quot;box&quot; :class=&quot;[类名1，类名2，类名3]&quot;&gt;&lt;/div&gt;</code></p></li></ol><h2 id="_1-4-v-model应用与其他表单元素" tabindex="-1"><a class="header-anchor" href="#_1-4-v-model应用与其他表单元素"><span>1.4 v-model应用与其他表单元素</span></a></h2><h2 id="_1-5-计算属性" tabindex="-1"><a class="header-anchor" href="#_1-5-计算属性"><span>1.5 计算属性</span></a></h2><h2 id="_1-6watch" tabindex="-1"><a class="header-anchor" href="#_1-6watch"><span>1.6watch</span></a></h2><h2 id="_1-7-生命周期钩子函数" tabindex="-1"><a class="header-anchor" href="#_1-7-生命周期钩子函数"><span>1.7 生命周期钩子函数</span></a></h2><ol><li>beforeCreate() . created() 创建阶段，响应数据</li><li>beforeMount() . mounted() 挂载阶段，渲染模板</li><li>beforeUpdate() . update() 更新阶段，修改数据，更新视图</li><li>beforeDestroy() . destroyed 销毁阶段，销毁实例</li></ol><h2 id="_1-8-安装less" tabindex="-1"><a class="header-anchor" href="#_1-8-安装less"><span>1.8 安装less</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>\\*安装依赖包 less和less-loader*\\</span></span>
<span class="line"><span>\\*npm安装*\\</span></span>
<span class="line"><span>npm i less less-loader --save-dev</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\\*yarn安装*\\</span></span>
<span class="line"><span>yarn add less less-loader -D (开发依赖)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><h2 id="_1-9组件通信" tabindex="-1"><a class="header-anchor" href="#_1-9组件通信"><span>1.9组件通信</span></a></h2><h3 id="_1-9-1-父子关系" tabindex="-1"><a class="header-anchor" href="#_1-9-1-父子关系"><span>1.9.1 父子关系</span></a></h3><h4 id="_1-9-1-2-props校验" tabindex="-1"><a class="header-anchor" href="#_1-9-1-2-props校验"><span>1.9.1.2 props校验</span></a></h4><p>作用：为组件 prop 指定验证要求，不符合要求，控制台就会有错误提示，帮助开发者，快速发现问题</p><p>语法：</p><ol><li>类型校验</li><li>非空校验</li><li>默认值</li><li>自定义校验</li></ol><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">props: {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	校验的属性名: {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">		type: 类型,			 // Number, String, Boolean ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">		required: true,		  // 是否必填</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">		defalut: 默认值,		// 默认值</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">		validator (value) {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">			// 自定义校验逻辑，如果是true则通过校验，反之</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">			return 是否通过校验</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">		}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	}	</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-9-2-非父子关系" tabindex="-1"><a class="header-anchor" href="#_1-9-2-非父子关系"><span>1.9.2 非父子关系</span></a></h3><h2 id="_1-10-v-model详解" tabindex="-1"><a class="header-anchor" href="#_1-10-v-model详解"><span>1.10 v-model详解</span></a></h2><h2 id="_1-11-sync修饰符" tabindex="-1"><a class="header-anchor" href="#_1-11-sync修饰符"><span>1.11 .sync修饰符</span></a></h2><h2 id="_1-12-ref-和-ref" tabindex="-1"><a class="header-anchor" href="#_1-12-ref-和-ref"><span>1.12 ref 和 $ref</span></a></h2><h2 id="_1-13-自定义指令" tabindex="-1"><a class="header-anchor" href="#_1-13-自定义指令"><span>1.13 自定义指令</span></a></h2><h2 id="_1-14-插槽使用" tabindex="-1"><a class="header-anchor" href="#_1-14-插槽使用"><span>1.14 插槽使用</span></a></h2><h2 id="vuex-的使用" tabindex="-1"><a class="header-anchor" href="#vuex-的使用"><span>Vuex 的使用</span></a></h2><h3 id="state模块" tabindex="-1"><a class="header-anchor" href="#state模块"><span>state模块</span></a></h3><h2 id="mutations模块" tabindex="-1"><a class="header-anchor" href="#mutations模块"><span>mutations模块</span></a></h2><h3 id="getters模块" tabindex="-1"><a class="header-anchor" href="#getters模块"><span>getters模块</span></a></h3><h3 id="actions模块" tabindex="-1"><a class="header-anchor" href="#actions模块"><span>actions模块</span></a></h3><h3 id="modules模块" tabindex="-1"><a class="header-anchor" href="#modules模块"><span>modules模块</span></a></h3><ol><li><p>state</p><p>​</p></li><li><p>mutations</p><p>​</p></li><li><p>getters</p><p>​</p></li><li><p>actions</p><p>​</p></li></ol>`,37)]))}const d=i(l,[["render",t]]),r=JSON.parse('{"path":"/article/gpzuom8m/","title":"Vue2+Vue3","lang":"zh-CN","frontmatter":{"title":"Vue2+Vue3","tags":["Vue","前端","框架"],"createTime":"2025/03/18 15:45:26","permalink":"/article/gpzuom8m/"},"headers":[],"readingTime":{"minutes":2.06,"words":619},"git":{"updatedTime":1742564161000,"contributors":[{"name":"8848TI","username":"8848TI","email":"3022926092@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/8848TI?v=4","url":"https://github.com/8848TI"}]},"filePathRelative":"前端/Vue2+Vue3.md","categoryList":[{"id":"9abfe4","sort":10001,"name":"前端"}]}');export{d as comp,r as data};
